[build-system]
requires = ["flit_core >=3,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "thx"
readme = "README.rst"
license = {file="LICENSE"}
dynamic = ["version", "description"]
authors = [
    {name="Amethyst Reese", email="amethyst@n7.gg"},
]
classifiers = [
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Topic :: Utilities",
    "Typing :: Typed",
]
requires-python = ">=3.8"
dependencies = [
    "aioitertools >= 0.10.0b1",
    "click >= 8.0",
    "packaging >= 21.0",
    "rich >= 11.0.0",
    "tomli >= 1.0",
    "trailrunner >= 1.1",
    "typing_extensions >= 4.0",
    "watchdog >= 2.1",
]

[project.optional-dependencies]
dev = [
    "aioitertools==v0.11.0",
    "click==8.1.7",
    "packaging==24.0",
    "rich==13.7.1",
    "tomli==2.0.1",
    "trailrunner==1.4.0",
    "typing_extensions == 4.1.1",
    "watchdog==4.0.0",

    "attribution==1.7.1",
    "black==24.4.2",
    "coverage==7.5.1",
    "flit==3.9.0",
    "flake8==7.0.0",
    "mypy==1.10.0",
    "ufmt==2.6.0",
    "usort==1.0.8.post1",
]
docs = [
    "sphinx==7.2.6; python_version > '3.8'",
    "sphinx-mdinclude==0.6.1",
]

[project.scripts]
thx = "thx.main:main"

[project.urls]
Documentation = "https://thx.omnilib.dev"
Github = "https://github.com/omnilib/thx"

[tool.flit.sdist]
exclude = [
    ".github/",
]

[tool.attribution]
name = "thx"
package = "thx"
ignored_authors = ["dependabot"]
version_file = true
signed_tags = false

[tool.coverage.run]
branch = true
parallel = true
include = ["thx/*"]
omit = ["thx/tests/*"]

[tool.coverage.report]
fail_under = 90
precision = 1
show_missing = true
skip_covered = true

[tool.mypy]
python_version = "3.8"
strict = true
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "thx.core"
disallow_untyped_calls = false

[tool.thx]
default = ["format", "docs", "test", "lint", "coverage"]
python_versions = ["3.8", "3.9", "3.10", "3.11", "3.12"]
extras = ["dev", "docs"]

[tool.thx.values]
module = "thx"
srcs = "thx"

[tool.thx.jobs]
docs = {run="sphinx-build -ab html docs html", once=true}
format = {run="python -m ufmt format {srcs}", once=true}
test = "python -m coverage run -m {module}.tests"

[tool.thx.jobs.coverage]
requires = ["test"]
run = [
    "python -m coverage combine -q",
    "python -m coverage report",
]
once = true
show_output = true

[tool.thx.jobs.lint]
run = [
    "python -m mypy --install-types --non-interactive -p {module}",
    "python -m flake8 {srcs}",
    "python -m ufmt check {srcs}",
]
parallel = true
